#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
Parser = LL
#RegularDefinitions
digito: [0-9]
mai: [A-Z]
min: [a-z]
letra: {mai}|{min}
alfa: {digito}|{letra}
#Tokens
// Pontuação
","
":"
";"
"["
"]"
"("
")"
"{"
"}"
"+"
"-"
"*"
"/"
"<-"
"="
"!="
"<"
"<="
">"
">="

// Caracteres de formatação (ignorados)
:[\s\t\n]

// Comentário de bloco
:! /\*([^\*]|(\*)+[^\*/])*\*+/


// Tokens
palavra_reservada : {min} ( {min} | {mai} {min} )*
identificador_de_int: i_{letra} {alfa}*
identificador_de_float: f_{letra} {alfa}*
identificador_de_string: s_{letra} {alfa}*
identificador_de_bool: b_{letra} {alfa}*
constante_int: {digito}+
constante_float: {digito}+,{digito}+
constante_string: \"[^\"\n]*\"


// Palavras Reservadas
and = palavra_reservada : "and"
false = palavra_reservada : "false"
if = palavra_reservada : "if"
in = palavra_reservada : "in"
isFalseDo = palavra_reservada : "isFalseDo"
isTrueDo = palavra_reservada : "isTrueDo"
main = palavra_reservada : "main"
module = palavra_reservada : "module"
not = palavra_reservada : "not"
or = palavra_reservada : "or"
out = palavra_reservada : "out"
true = palavra_reservada : "true"
while = palavra_reservada : "while"

#NonTerminals
<programa>
<variaveis>
<lista_de_variaveis>
<lista_de_variaveis2> 
<identificador>
<identificador2>
<tipos_de_identificador>
<atribuicao>
<identificador_para_expressao>
<identificador_para_expressao2>
<entrada_de_dados>
<lista_de_identificadores> 
<lista_de_identificadores2>
<saida_de_dados>
<lista_de_expressoes>
<lista_de_expressoes2>
<comando_de_selecao>
<comando_de_selecao2>
<fluxo_false_do>
<fluxo_true_do>
<comando_de_repeticao>  
<comando_de_repeticao2> 
<comando>
<lista_de_comandos>
<lista_de_comandos2>
<expressao>
<expressao2>
<elemento>
<relacional>
<relacional2>
<operador_relacional>
<aritmetica>
<aritmetica2>
<termo>
<termo2>
<fator>
<vetor_uso>

#Grammar
<programa> ::= main module <variaveis> "{" <lista_de_comandos> "}";
<variaveis> ::= ":" <lista_de_variaveis> ";" | î;
<lista_de_variaveis> ::= <identificador><lista_de_variaveis2>;
<lista_de_variaveis2> ::= "," <lista_de_variaveis> | î;
<identificador> ::= <tipos_de_identificador> <identificador2>;
<identificador2> ::= "[" constante_int "]" | î;
<tipos_de_identificador> ::= identificador_de_int | identificador_de_float | identificador_de_string | identificador_de_bool;
<atribuicao> ::= <identificador_para_expressao>  "<-" <expressao> ";";
<identificador_para_expressao> ::= <tipos_de_identificador><identificador_para_expressao2>;
<identificador_para_expressao2> ::= î | "[" <expressao> "]";
<entrada_de_dados> ::= in "(" <lista_de_identificadores> ")" ";";
<lista_de_identificadores> ::= <identificador_para_expressao> <lista_de_identificadores2>;
<lista_de_identificadores2> ::= "," <lista_de_identificadores> | î;
<saida_de_dados> ::= out "(" <lista_de_expressoes> ")" ";";
<lista_de_expressoes> ::= <expressao> <lista_de_expressoes2>;
<lista_de_expressoes2> ::= "," <lista_de_expressoes> | î;
<comando_de_selecao> ::= if "(" <expressao> ")" <comando_de_selecao2>;
<comando_de_selecao2> ::= isFalseDo ":" "{" <lista_de_comandos> "}" <fluxo_true_do> | isTrueDo ":" "{" <lista_de_comandos> "}" <fluxo_false_do>;
<fluxo_false_do> ::= isFalseDo ":" "{" <lista_de_comandos> "}" | î;
<fluxo_true_do> ::= isTrueDo ":" "{" <lista_de_comandos> "}" | î;
<comando_de_repeticao> ::= while "(" <expressao> ")" <comando_de_repeticao2>;
<comando_de_repeticao2> ::= isTrueDo ":" "{" <lista_de_comandos> "}" | isFalseDo ":" "{" <lista_de_comandos> "}";
<comando> ::= <entrada_de_dados> | <saida_de_dados> | <atribuicao> | <comando_de_selecao> |<comando_de_repeticao>;
<lista_de_comandos> ::= <comando> <lista_de_comandos2>;
<lista_de_comandos2> ::= <lista_de_comandos> | î;
<expressao> ::= <elemento> <expressao2>;
<expressao2> ::= and <elemento> <expressao2> | or <elemento> <expressao2> | î;
<elemento> ::= <relacional> | true | false | not <elemento>;
<relacional> ::= <aritmetica> <relacional2>;
<relacional2> ::= <operador_relacional> <aritmetica> | î;
<operador_relacional> ::= "=" | "!="| "<" | "<=" | ">" | ">=";
<aritmetica> ::= <termo> <aritmetica2>;
<aritmetica2> ::= "+" <termo> <aritmetica2> | "-" <termo> <aritmetica2> | î ;
<termo> ::= <fator> <termo2>;
<termo2> ::= "*" <fator> <termo2> | "/" <fator> <termo2>| î;
<fator> ::= <tipos_de_identificador> <vetor_uso> | constante_int | constante_float | constante_string | "(" <expressao> ")" | "+" <fator> | "-" <fator>;
<vetor_uso> ::= î | "[" <expressao> "]";

