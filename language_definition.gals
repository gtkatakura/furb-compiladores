#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
Package = br.com.furb.compiler.lexical.impl.gals
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
Parser = LL
#RegularDefinitions
digito: [0-9]
mai: [A-Z]
min: [a-z]
letra: {mai}|{min}
alfa: {digito}|{letra}
#Tokens
// Pontuação
","
":"
";"
"["
"]"
"("
")"
"{"
"}"
"+"
"-"
"*"
"/"
"<-"
"="
"!="
"<"
"<="
">"
">="

// Caracteres de formatação (ignorados)
:[\s\t\n]

// Comentário de bloco
:! /\*([^\*]|(\*)+[^\*/])*\*+/


// Tokens
palavra_reservada : {min} ( {min} | {mai} {min} )*
identificador_de_int: i_{letra} {alfa}*
identificador_de_float: f_{letra} {alfa}*
identificador_de_string: s_{letra} {alfa}*
identificador_de_bool: b_{letra} {alfa}*
constante_int: {digito}+
constante_float: {digito}+,{digito}+
constante_string: \"[^\"\n]*\"


// Palavras Reservadas
and = palavra_reservada : "and"
false = palavra_reservada : "false"
if = palavra_reservada : "if"
in = palavra_reservada : "in"
isFalseDo = palavra_reservada : "isFalseDo"
isTrueDo = palavra_reservada : "isTrueDo"
main = palavra_reservada : "main"
module = palavra_reservada : "module"
not = palavra_reservada : "not"
or = palavra_reservada : "or"
out = palavra_reservada : "out"
true = palavra_reservada : "true"
while = palavra_reservada : "while"

#NonTerminals
<programa>
<variaveis>
<lista_de_variaveis>
<lista_de_variaveis2> 
<identificador>
<identificador2>
<tipos_de_identificador>
<atribuicao>
<identificador_para_expressao>
<identificador_para_expressao2>
<entrada_de_dados>
<lista_de_identificadores> 
<lista_de_identificadores2>
<saida_de_dados>
<lista_de_expressoes>
<lista_de_expressoes2>
<comando_de_selecao>
<comando_de_selecao2>
<fluxo_false_do>
<fluxo_true_do>
<comando_de_repeticao>  
<comando_de_repeticao2> 
<comando>
<lista_de_comandos>
<lista_de_comandos2>
<expressao>
<expressao2>
<elemento>
<relacional>
<relacional2>
<operador_relacional>
<aritmetica>
<aritmetica2>
<termo>
<termo2>
<fator>
<vetor_uso>

#Grammar
<programa> ::= #12 main module <variaveis> "{" <lista_de_comandos> "}" #13;
<variaveis> ::= ":" <lista_de_variaveis> ";" | î;
<lista_de_variaveis> ::= <identificador> <lista_de_variaveis2>;
<lista_de_variaveis2> ::= "," <lista_de_variaveis> | î;
<identificador> ::= <tipos_de_identificador> #21  <identificador2> #22;
<tipos_de_identificador> ::= identificador_de_int | identificador_de_float | identificador_de_string | identificador_de_bool;
<identificador2> ::= "[" constante_int #26 "]" | î;

<lista_de_comandos> ::= <comando> <lista_de_comandos2>;
<lista_de_comandos2> ::= <lista_de_comandos> | î;
<comando> ::= <entrada_de_dados> | <saida_de_dados> | <atribuicao> | <comando_de_selecao> |<comando_de_repeticao>;

<atribuicao> ::= <identificador_para_expressao> "<-" <expressao> #25";";
<identificador_para_expressao> ::= <tipos_de_identificador> #21 <identificador_para_expressao2>;

<vetor_uso> ::= î | #27 "[" <expressao> "]";
<identificador_para_expressao2> ::= î | #27 "[" <expressao> "]";

<entrada_de_dados> ::= in "(" <lista_de_identificadores> ")" ";";

<lista_de_identificadores> ::= <identificador_para_expressao> #23 <lista_de_identificadores2>;
<lista_de_identificadores2> ::= "," <lista_de_identificadores> | î;

<saida_de_dados> ::= out "(" <lista_de_expressoes> ")" ";";

<lista_de_expressoes> ::= <expressao> #11 <lista_de_expressoes2>;
<lista_de_expressoes2> ::= "," <lista_de_expressoes> | î;

<comando_de_selecao> ::= if "(" <expressao> ")" <comando_de_selecao2>;
<comando_de_selecao2> ::= isFalseDo #28 ":" "{" <lista_de_comandos> "}" <fluxo_true_do> #29 | 
                             isTrueDo #28 ":" "{" <lista_de_comandos> "}" <fluxo_false_do> #29;
<fluxo_false_do> ::= isFalseDo #30 ":" "{" <lista_de_comandos> "}" | î;
<fluxo_true_do> ::= isTrueDo #30 ":" "{" <lista_de_comandos> "}" | î;

<comando_de_repeticao> ::= #31 while "(" <expressao> ")" <comando_de_repeticao2>;
<comando_de_repeticao2> ::= isTrueDo #32 ":" "{" <lista_de_comandos> #33 "}" | 
                               isFalseDo #32 ":" "{" <lista_de_comandos> #33 "}";

<expressao> ::= <elemento> <expressao2>;
<expressao2> ::= and <elemento> #14 <expressao2> | or <elemento> #15 <expressao2> | î;
<elemento> ::= <relacional> | true #16 | false #17 | not <elemento> #18;
<relacional> ::= <aritmetica> <relacional2>;
<relacional2> ::= <operador_relacional> #10 <aritmetica> #9 | î;
<operador_relacional> ::= "=" | "!="| "<" | "<=" | ">" | ">=";
<aritmetica> ::= <termo> <aritmetica2>;
<aritmetica2> ::= "+" <termo> #1 <aritmetica2> | "-" <termo> #2 <aritmetica2> | î ;
<termo> ::= <fator> <termo2>;
<termo2> ::= "*" <fator> #3 <termo2> | "/" <fator> #4 <termo2>| î;
<fator> ::= <tipos_de_identificador> #21 <vetor_uso> #24 | 
	    constante_int #5 | 
	    constante_float #6 | 
	    constante_string #19 | 
	    "(" <expressao> ")" | 
	    "+" <fator> #7 | 
	    "-" <fator> #8;

